@page "/packages/details"
@inject ApplicationState AppState
@inject NavigationManager NavManager
@inject HttpClient HttpClient
@using NBP_Project_2023.Shared

<div>
    @if (package == null || AppState.AccountType != AccountTypeEnum.User || AppState.UserAccount == null)
    {
        <span>Detalji pošiljke ne mogu biti učitani došlo je do greške!</span>
    }
    else
    {
        <div>
            <h5>Identifikacioni broj paketa: </h5> <h6>@package.PackageID</h6>
        </div>

        <div>
            <h5>Sadržaj: </h5> <h6>@package.Content</h6>
        </div>

        <div>
            <h5>Opis: </h5> <h6>@package.Description</h6>
        </div>

        <div>
            <h5>Težina (kg): </h5> <h6>@package.Weight</h6>
        </div>

        <div>
            <h5>Cena (rsd): </h5> <h6>@package.Price</h6>
        </div>

        <div>
            <h5>E-pošta pošiljaoca: </h5> <h6>@package.SenderEmail</h6>
        </div>

        <div>
            <h5>E-pošta primaoca: </h5> <h6>@package.ReceiverEmail</h6>
        </div>

        <div>
            <h5>Očekivano vreme prispeća (valjda se tako kaže?): </h5> <h6>@package.EstimatedArrivalDate</h6>
        </div>

        <NavLink>Nazad</NavLink>
    }
    
</div>

@code {
    [Parameter]
    public Package? package { get; set; }

    protected override Task OnParametersSetAsync()
    {
        if (package == null || AppState.AccountType != AccountTypeEnum.User || AppState.UserAccount == null)
        {
            NavManager.NavigateTo("/login/user");
        }
        return base.OnParametersSetAsync();
    }
}
