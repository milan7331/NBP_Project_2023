@page "/login/{type}/{message?}"
@inject ApplicationState AppState
@inject HttpClient HttpClient
@inject NavigationManager NavManager
@using NBP_Project_2023.Shared

<h3>Log In</h3>
<div>
    @if(Type == "courier")
    {
        <EditForm Model=@courierLoginForm OnSubmit="@HandleLoginFormSubmission">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div>
                <label for="courier-login-firstname">Ime: </label>
                <InputText id="courier-login-firstname" class="form-control" @bind-Value=courierLoginForm.FirstName />
            </div>

            <div>
                <label for="courier-login-lastname">Prezime: </label>
                <InputText id="courier-login-lastname" class="form-control" @bind-Value=courierLoginForm.LastName />
            </div>

            <button type="submit" class="btn btn-primary">Prijavi se</button>

        </EditForm>

    }
    else if (Type == "user")
    {
        @if(Message == "success")
        {
            <div @*class="alert"*@>
                Nalog uspešno kreiran!
            </div>
        }

        <EditForm Model=@userLoginForm OnSubmit="@HandleLoginFormSubmission">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div>
                <label for="user-login-email">Email: </label>
                <InputText id="user-login-email" class="form-control" @bind-Value=userLoginForm.EmailAddress />
            </div>

            <div>
                <label for="user-login-password">Lozinka: </label>
                <InputText id="user-login-password" class="form-control" @bind-Value=userLoginForm.Password />
            </div>

            <button type="submit" class="btn btn-primary">Prijavi se</button>

        </EditForm>
    }
    else
    {
        <span>login greška</span>
    }
</div>


@code {
    [Parameter] public string Type { get; set; } = string.Empty;

    [Parameter] public string Message { get; set; } = string.Empty;

    private UserLoginForm userLoginForm = new();
    private CourierLoginForm courierLoginForm = new();


    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        StateHasChanged();
    }

    async void HandleLoginFormSubmission(EditContext context)
    {
        if (context.Validate())
        {

            if (Type == "courier")
            {
                CourierLoginForm form = (CourierLoginForm)context.Model;
                //var response = await HttpClient.GetFromJsonAsync<Courier>(@"/api/Courier/GetCourierLogin/$firstName/$lastName");
                var response = await HttpClient.GetAsync($"/api/Courier/GetCourierLogin/{form.FirstName}/{form.LastName}");
                if(response.IsSuccessStatusCode)
                {
                    var content = await response.Content.ReadFromJsonAsync<Courier>();
                    if (content != null)
                    {
                        AppState.LogInAsCourier(content);
                        NavManager.NavigateTo("/dashboard");
                    }
                }
            }
            else if(Type == "user")
            {
                UserLoginForm form = (UserLoginForm)context.Model;
                var response = await HttpClient.GetAsync($"/api/UserAccount/LogIn/{form.EmailAddress}/{form.Password}");
                if (response.IsSuccessStatusCode)
                {
                    var content = await response.Content.ReadFromJsonAsync<UserAccount>();
                    if (content != null)
                    {
                        AppState.LogInAsUser(content);
                        NavManager.NavigateTo("/packages");
                    }
                }
            }
        }
    }

}
